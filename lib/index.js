// Generated by CoffeeScript 1.10.0
(function() {
  var Stylus, basename, dirname, extend, extname, ref, stylus;

  ref = require('path'), basename = ref.basename, dirname = ref.dirname, extname = ref.extname;

  stylus = require('stylus');

  extend = (function(_this) {
    return function(object, properties) {
      var key, val;
      for (key in properties) {
        val = properties[key];
        object[key] = val;
      }
      return object;
    };
  })(this);

  Stylus = function(options) {
    var opts;
    opts = extend({
      master: null,
      output: 'master.css'
    }, options);
    return function(files, metalsmith, done) {
      var file, fn, key;
      fn = function(key, file) {
        var s;
        if (opts.master != null) {
          if (key === opts.master) {
            s = stylus(file.contents.toString()).set('filename', opts.output).include(process.cwd() + '/' + metalsmith._directory + '/**/*');
            return s.render(function(err, css) {
              var new_file;
              if (err != null) {
                throw err;
              }
              new_file = key.replace(opts.master, opts.output);
              files[new_file] = file;
              files[new_file].contents = new Buffer(css);
              return delete files[key];
            });
          } else if (key.indexOf(opts.master) === -1) {
            return delete files[key];
          }
        } else {
          s = stylus(file.contents.toString()).set('filename', key).include(process.cwd() + '/' + metalsmith._directory + '/**/*');
          return s.render(function(err, css) {
            var new_file;
            if (err) {
              throw err;
            }
            new_file = key.replace('.styl', '.css');
            files[new_file] = files[key];
            files[new_file].contents = new Buffer(css);
            return delete files[key];
          });
        }
      };
      for (key in files) {
        file = files[key];
        fn(key, file);
      }
      return done();
    };
  };

  module.exports = Stylus;

}).call(this);
